@reference '@/styles/config.css';

.game-grid {
	@apply p-[calc(var(--scale)*6rem)];

	.game-grid-wrapper {
		@apply shadow-[0_calc(var(--scale)*0.5rem)_calc(var(--scale)*8rem)_--alpha(var(--color-accent)/50%)];
	}

	&.game-grid-right {
		.game-grid-wrapper {
			@apply shadow-[0_calc(var(--scale)*0.5rem)_calc(var(--scale)*8rem)_--alpha(var(--color-primary)/50%)];
		}
	}

	&.game-grid-error {
		.game-grid-wrapper {
			@apply shadow-[0_calc(var(--scale)*0.5rem)_calc(var(--scale)*8rem)_--alpha(var(--color-error)/50%)]
				animate-[shake_0.2s_infinite];
		}
	}

	.game-grid-hint,
	.game-grid-block {
		&::after {
			@apply content-[''] absolute inset-0
				border-t border-l border-base-300/60
				mix-blend-multiply pointer-events-none;
		}
		&.game-grid-hint-t-strong,
		&.game-grid-block-t-strong {
			@apply after:border-t-2 after:border-t-base-300;
		}
		&.game-grid-hint-l-strong,
		&.game-grid-block-l-strong {
			@apply after:border-l-2 after:border-l-base-300;
		}
		&.game-grid-hint-b-strong,
		&.game-grid-block-b-strong {
			@apply after:border-b-2 after:border-b-base-300;
		}
		&.game-grid-hint-r-strong,
		&.game-grid-block-r-strong {
			@apply after:border-r-2 after:border-r-base-300;
		}
	}
}

@keyframes shake {
	0%,
	100% {
		transform: translateX(0) rotate(0);
		filter: blur(0);
	}
	25%,
	75% {
		transform: translateX(0.5%) rotate(0.4deg);
		filter: blur(0.1rem);
	}
	50% {
		transform: translateX(-0.5%) rotate(-0.4deg);
	}
}
